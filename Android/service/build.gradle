apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion compileSdk

    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk//keep it below M, tests+permission don't work

        versionCode 1
        versionName "1.0"
        if (groovyEnabled) {
            multiDexEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += "src/extractors"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task createStructureClasses {
    def structure = "${project.projectDir}/src/main/assets/structure.json"
    doLast {
        def targetPackage = 'com.scurab.android.anuitor.extract2'
        com.scurab.anutior.buildsrc.Script.generateClasses(targetPackage, structure, "${project.projectDir}/src/extractors")
    }
    inputs.files(structure)
    outputs.dir("${project.projectDir}/src/extractors")
    group = "build"
}
preBuild.dependsOn createStructureClasses

task cleanStructureClasses {
    doLast {
        def file = new File("${project.projectDir}/src/extractors")
        println("Delete" + file.deleteDir())
        file.mkdirs()
    }
    group = "build"
}
clean.dependsOn cleanStructureClasses


dependencies {
    testImplementation "junit:junit:$junit"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compileOnly "androidx.legacy:legacy-support-core-ui:${androidX}"
    compileOnly "androidx.fragment:fragment:${androidX}"
    compileOnly "androidx.recyclerview:recyclerview:${androidX}"
    compileOnly "androidx.cardview:cardview:${androidX}"
    compileOnly "androidx.gridlayout:gridlayout:${androidX}"
    compileOnly "androidx.percentlayout:percentlayout:${androidX}"
    compileOnly "com.google.android.material:material:${androidX}"
    compileOnly "androidx.viewpager2:viewpager2:${viewPager2}"

    compileOnly "com.google.code.gson:gson:${gson}"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:${jackson}"
    compileOnly "com.google.android.tools:dx:${dx}"
    compileOnly "org.codehaus.groovy:groovy:${groovy}"

    //androidTest only, not needed for the lib itself
    testImplementation "com.google.code.gson:gson:${gson}"
    testImplementation "commons-io:commons-io:${commonsIo}"
    testImplementation "org.robolectric:robolectric:${robolectric}"
    testImplementation "org.mockito:mockito-core:${mockito}"
    androidTestImplementation "org.mockito:mockito-core:${mockito}"
}